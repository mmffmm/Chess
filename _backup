##QUEEN
            # elif pickedup_square == "wQ" or pickedup_square == "bQ": # for Queen, copy paste the top.
        #     # for i in range(ChessMain.DIMENSION):
        #     #     possible_dropped_square.append([mouse_y+i, mouse_x])
        #     #     possible_dropped_square.append([mouse_y-i, mouse_x])
        #     #     possible_dropped_square.append([mouse_y, mouse_x+i])
        #     #     possible_dropped_square.append([mouse_y, mouse_x-i])
        #     #     possible_dropped_square.append([mouse_y+i, mouse_x+i])
        #     #     possible_dropped_square.append([mouse_y-i, mouse_x+i])
        #     #     possible_dropped_square.append([mouse_y+i, mouse_x-i])
        #     #     possible_dropped_square.append([mouse_y-i, mouse_x-i])
        #     possible_dropped_square.extend([[mouse_y-i, mouse_x] for i in range(to+1)]) # move up
        #     possible_dropped_square.extend([[mouse_y+j, mouse_x] for j in range(bo+1)]) # move down
        #     possible_dropped_square.extend([[mouse_y, mouse_x+k] for k in range(ro+1)]) # move right
        #     possible_dropped_square.extend([[mouse_y, mouse_x-l] for l in range(lo+1)]) # move left
        #     possible_dropped_square.extend([[mouse_y+jk, mouse_x+jk] for jk in range(bro+1)]) # move bottom right
        #     possible_dropped_square.extend([[mouse_y+jl, mouse_x-jl] for jl in range(blo+1)]) # move bottom left
        #     possible_dropped_square.extend([[mouse_y-ik, mouse_x+ik] for ik in range(tro+1)]) # move top right
        #     possible_dropped_square.extend([[mouse_y-il, mouse_x-il] for il in range(tlo+1)]) # move top left

#Rook
            # for i in range(ChessMain.DIMENSION):
            #     possible_dropped_square.append([mouse_y+i, mouse_x])
            #     possible_dropped_square.append([mouse_y-i, mouse_x])
            #     possible_dropped_square.append([mouse_y, mouse_x+i])
            #     possible_dropped_square.append([mouse_y, mouse_x-i])

#BIshop
            # for i in range(ChessMain.DIMENSION):
            #     possible_dropped_square.append([mouse_y+i, mouse_x+i])
            #     possible_dropped_square.append([mouse_y-i, mouse_x+i])
            #     possible_dropped_square.append([mouse_y+i, mouse_x-i])
            #     possible_dropped_square.append([mouse_y-i, mouse_x-i])

#Knight
            # possible_dropped_square.append([mouse_y+2, mouse_x+1])
            # possible_dropped_square.append([mouse_y+2, mouse_x-1])
            # possible_dropped_square.append([mouse_y-2, mouse_x+1])
            # possible_dropped_square.append([mouse_y-2, mouse_x-1])
            # possible_dropped_square.append([mouse_y+1, mouse_x+2])
            # possible_dropped_square.append([mouse_y+1, mouse_x-2])
            # possible_dropped_square.append([mouse_y-1, mouse_x+2])
            # possible_dropped_square.append([mouse_y-1, mouse_x-2])

#King
        # possible_dropped_square.append([mouse_y+1, mouse_x])
        # possible_dropped_square.append([mouse_y-1, mouse_x])
        # possible_dropped_square.append([mouse_y, mouse_x+1])
        # possible_dropped_square.append([mouse_y, mouse_x-1])
        # possible_dropped_square.append([mouse_y+1, mouse_x+1])
        # possible_dropped_square.append([mouse_y-1, mouse_x+1])
        # possible_dropped_square.append([mouse_y+1, mouse_x-1])
        # possible_dropped_square.append([mouse_y-1, mouse_x-1])